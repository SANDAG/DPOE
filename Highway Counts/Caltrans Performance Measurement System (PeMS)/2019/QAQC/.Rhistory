#To see column names in source data
Head(Source_data)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#Rename source data columns to match database column names
#Order source data. Make sure order is the same as in the database.
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year, Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address, Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code, Source_data$Vehicle.Population),]
# SQL data
library(RODBC)
sql_query <- 'SELECT *
FROM [dpoe_stage].[staging].[emission_factors_2]'
channel <- odbcDriverConnect('driver={SQL Server}; server=socioeca8; database=dpoe_stage; trusted_connection=true')
database_data <- sqlQuery(channel,sql_query,stringsAsFactors = FALSE)
odbcClose(channel)
database_data <- database_data[order(database_data$vehicle, database_data$gvwr, database_data$fuel_type, database_data$model, database_data$fuel_tech, database_data$electric_mileage, database_data$vpr, database_data$county, database_data$mpo, database_data$subarea, database_data$cbgc, database_data$zip, database_data$vehicle_population),]
View(database_data)
View(Source_data)
View(Source_data)
#To see column names in source data
Head(Source_data)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#Rename source data columns to match database column names
Source_data <- rename(Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),])
#Rename source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#Rename source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#To see column names in source data
Head(Source_data)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
#Rename source data. Make sure order is the same as in the database.
Source_data <- rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"),]
# SQL data
library(RODBC)
sql_query <- 'SELECT *
FROM [dpoe_stage].[staging].[emission_factors_2]'
channel <- odbcDriverConnect('driver={SQL Server}; server=socioeca8; database=dpoe_stage; trusted_connection=true')
database_data <- sqlQuery(channel,sql_query,stringsAsFactors = FALSE)
odbcClose(channel)
database_data <- database_data[order(database_data$vehicle, database_data$gvwr, database_data$fuel_type, database_data$model,
database_data$fuel_tech, database_data$electric_mileage, database_data$vpr, database_data$county,
database_data$mpo, database_data$subarea, database_data$cbgc, database_data$zip, database_data$vehicle_population),]
# compare files
all(Source_data == database_data)
identical(Source_data,database_data)
#To see column names in source data
Head(Source_data)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
Source_data <- rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
Head(Source_data)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
Head(Source_data)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
Source_data <- rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
#To see column names in source data
colnames(Source_data)
install.packages("dplyr")
#Source data
library(dplyr)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
colnames(Source_data)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
Source_data <- rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
rlang::last_error()
#Source data
library(dplyr)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
colnames(Source_data)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
Source_data <- rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
comparison
#Source data
library(dplyr)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
colnames(Source_data)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
Source_data <- plyr::rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
#Source data
library(dplyr)
#Source data
library(dplyr)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
Source_data <- dplyr::rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
#To see column names in source data
colnames(Source_data)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
Source_data <- plyr::rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
#Rename source data. Make sure order is the same as in the database.
Source_data <- dplyr::rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
# file comparison code between a CSV and SQL Table
#Source data
library(dplyr)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
colnames(Source_data)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
Source_data <- dplyr::rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
#Source data
library(plyr)
help(rename)
install.packages("plyr")
#Source data
library(plyr)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
colnames(Source_data)
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Rename source data. Make sure order is the same as in the database.
Source_data <- plyr::rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
# SQL data
library(RODBC)
sql_query <- 'SELECT *
FROM [dpoe_stage].[staging].[emission_factors_2]'
channel <- odbcDriverConnect('driver={SQL Server}; server=socioeca8; database=dpoe_stage; trusted_connection=true')
database_data <- sqlQuery(channel,sql_query,stringsAsFactors = FALSE)
odbcClose(channel)
database_data <- database_data[order(database_data$vehicle, database_data$gvwr, database_data$fuel_type, database_data$model,
database_data$fuel_tech, database_data$electric_mileage, database_data$vpr, database_data$county,
database_data$mpo, database_data$subarea, database_data$cbgc, database_data$zip, database_data$vehicle_population),]
# compare files
all(Source_data == database_data)
identical(Source_data,database_data)
help(rename)
#Source data
library(plyr)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
colnames(Source_data)
#Rename source data. Make sure order is the same as in the database.
Source_data <- plyr::rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
#Order source data columns to match database column names
Source_data <- Source_data[order(Source_data$Vehicle.Category, Source_data$GVWR.Class, Source_data$Fuel.Type, Source_data$Model.Year,
Source_data$Fuel.Technology, Source_data$Electric.Mile.Range, Source_data$Number.of.Vehicles.Registered.at.the.Same.Address,
Source_data$County, Source_data$MPO, Source_data$Sub.Area, Source_data$Census.Block.Group.Code, Source_data$ZIP.Code,
Source_data$Vehicle.Population),]
#Source data
library(plyr)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
colnames(Source_data)
#Rename source data. Make sure order is the same as in the database.
Source_data <- plyr::rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="MPO", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
Source_data <- Source_data[order(Source_data$vehicle, Source_data$gvwr, Source_data$fuel_type, Source_data$model,
Source_data$fuel_tech, Source_data$electric_mileage, Source_data$vpr, Source_data$county,
Source_data$mpo, Source_data$subarea, Source_data$cbgc, Source_data$zip, Source_data$vehicle_population),]
#Source data
library(plyr)
# Source data, make sure to use double backslashes for the file path
Source_data <- read.csv(paste("R:\\DPOE\\EmissionFactors\\CARB\\2017\\QAQC\\FleetDB-County-SANDIEGO-2017-All-Clean.csv",sep=''),
stringsAsFactors = FALSE)
#To see column names in source data
colnames(Source_data)
#Rename source data. Make sure order is the same as in the database.
Source_data <- plyr::rename(Source_data, c("Vehicle.Category"="vehicle", "GVWR.Class"="gvwr", "Fuel.Type"="fuel_type",
"Model.Year"="model","Fuel.Technology"="fuel_tech", "Electric.Mile.Range"="electric_mileage", "Number.of.Vehicles.Registered.at.the.Same.Address"="vpr",
"County"="county", "MPO"="mpo", "Sub.Area"="subarea", "Census.Block.Group.Code"="cbgc", "ZIP.Code"="zip", "Vehicle.Population"="vehicle_population"))
Source_data <- Source_data[order(Source_data$vehicle, Source_data$gvwr, Source_data$fuel_type, Source_data$model,
Source_data$fuel_tech, Source_data$electric_mileage, Source_data$vpr, Source_data$county,
Source_data$mpo, Source_data$subarea, Source_data$cbgc, Source_data$zip, Source_data$vehicle_population),]
# SQL data
library(RODBC)
sql_query <- 'SELECT *
FROM [dpoe_stage].[staging].[emission_factors_2]'
channel <- odbcDriverConnect('driver={SQL Server}; server=socioeca8; database=dpoe_stage; trusted_connection=true')
database_data <- sqlQuery(channel,sql_query,stringsAsFactors = FALSE)
odbcClose(channel)
database_data <- database_data[order(database_data$vehicle, database_data$gvwr, database_data$fuel_type, database_data$model,
database_data$fuel_tech, database_data$electric_mileage, database_data$vpr, database_data$county,
database_data$mpo, database_data$subarea, database_data$cbgc, database_data$zip, database_data$vehicle_population),]
# compare files
all(Source_data == database_data)
identical(Source_data,database_data)
x<- head(Source_data)
y<- head(database_data)
all(x==y)
x<- head(Source_data)
y<- head(database_data)
View(x)
View(y)
#IPEDS Vintage 2019 Data
# file comparison code between a CSV source file and raw upload SQL Table
#Reading in packages
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dep = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("data.table", "ggplot2", "scales", "sqldf", "rstudioapi", "RODBC", "reshape2",
"stringr","tidyverse", "plyr", "readxl", "readr", "reshape", "taRifx")
pkgTest(packages)
#Read in source files
source_2010 <- read.csv("R:\\DPOE\\IPEDS\\2019\\Source\\c2010_a_rv.csv", header=TRUE, sep=",")
#Read in SQL data
channel <- odbcDriverConnect('driver={SQL Server}; server=socioeca8; database=dpoe_stage; trusted_connection=true')
sql_2010 <- 'SELECT * FROM dpoe_stage.dbo.c2010_a_rv'
db_2010 <- sqlQuery(channel,sql_2010,stringsAsFactors = FALSE)
odbcClose(channel)
#Rename columns with an extra space
db_2010 <- plyr::rename(db_2010, c("DVCWHW  "="DVCWHW"))
#Convert data types
#2010
source_2010$"XCNRALM"<-as.character(source_2010$"XCNRALM")
source_2010$"XCNRALW"<-as.character(source_2010$"XCNRALW")
source_2010$"XCRACE03"<-as.character(source_2010$"XCRACE03")
source_2010$"XCRACE04"<-as.character(source_2010$"XCRACE04")
source_2010$"XCRACE05"<-as.character(source_2010$"XCRACE05")
source_2010$"XCRACE06"<-as.character(source_2010$"XCRACE06")
source_2010$"XCRACE07"<-as.character(source_2010$"XCRACE07")
source_2010$"XCRACE08"<-as.character(source_2010$"XCRACE08")
source_2010$"XCRACE09"<-as.character(source_2010$"XCRACE09")
source_2010$"XCRACE10"<-as.character(source_2010$"XCRACE10")
source_2010$"XCRACE11"<-as.character(source_2010$"XCRACE11")
source_2010$"XCRACE12"<-as.character(source_2010$"XCRACE12")
source_2010$"XCUNKNM"<-as.character(source_2010$"XCUNKNM")
source_2010$"XCUNKNW"<-as.character(source_2010$"XCUNKNW")
source_2010$"XCTOTALM"<-as.character(source_2010$"XCTOTALM")
source_2010$"XCTOTALW"<-as.character(source_2010$"XCTOTALW")
source_2010$"XCNRALT"<-as.character(source_2010$"XCNRALT")
source_2010$"XCRACE18"<-as.character(source_2010$"XCRACE18")
source_2010$"XCRACE19"<-as.character(source_2010$"XCRACE19")
source_2010$"XCRACE20"<-as.character(source_2010$"XCRACE20")
source_2010$"XCRACE21"<-as.character(source_2010$"XCRACE21")
source_2010$"XCRACE22"<-as.character(source_2010$"XCRACE22")
source_2010$"XCUNKNT"<-as.character(source_2010$"XCUNKNT")
source_2010$"XCTOTALT"<-as.character(source_2010$"XCTOTALT")
source_2010$"XCHISPM"<-as.character(source_2010$"XCHISPM")
source_2010$"XCHISPW"<-as.character(source_2010$"XCHISPW")
source_2010$"XCAIANM"<-as.character(source_2010$"XCAIANM")
source_2010$"XCAIANW"<-as.character(source_2010$"XCAIANW")
source_2010$"XCASIAM"<-as.character(source_2010$"XCASIAM")
source_2010$"XCASIAW"<-as.character(source_2010$"XCASIAW")
source_2010$"XCBKAAM"<-as.character(source_2010$"XCBKAAM")
source_2010$"XCBKAAW"<-as.character(source_2010$"XCBKAAW")
source_2010$"XCNHPIM"<-as.character(source_2010$"XCNHPIM")
source_2010$"XCNHPIW"<-as.character(source_2010$"XCNHPIW")
source_2010$"XCWHITM"<-as.character(source_2010$"XCWHITM")
source_2010$"XCWHITW"<-as.character(source_2010$"XCWHITW")
source_2010$"XC2MORM"<-as.character(source_2010$"XC2MORM")
source_2010$"XC2MORW"<-as.character(source_2010$"XC2MORW")
source_2010$"XCHISPT"<-as.character(source_2010$"XCHISPT")
source_2010$"XCAIANT"<-as.character(source_2010$"XCAIANT")
source_2010$"XCASIAT"<-as.character(source_2010$"XCASIAT")
source_2010$"XCBKAAT"<-as.character(source_2010$"XCBKAAT")
source_2010$"XCNHPIT"<-as.character(source_2010$"XCNHPIT")
source_2010$"XCWHITT"<-as.character(source_2010$"XCWHITT")
source_2010$"XC2MORT"<-as.character(source_2010$"XC2MORT")
source_2010$"XDVCAIT"<-as.character(source_2010$"XDVCAIT")
source_2010$"XDVCAIM"<-as.character(source_2010$"XDVCAIM")
source_2010$"XDVCAIW"<-as.character(source_2010$"XDVCAIW")
source_2010$"XDVCAPT"<-as.character(source_2010$"XDVCAPT")
source_2010$"XDVCAPM"<-as.character(source_2010$"XDVCAPM")
source_2010$"XDVCAPW"<-as.character(source_2010$"XDVCAPW")
source_2010$"XDVCBKT"<-as.character(source_2010$"XDVCBKT")
source_2010$"XDVCBKM"<-as.character(source_2010$"XDVCBKM")
source_2010$"XDVCBKW"<-as.character(source_2010$"XDVCBKW")
source_2010$"XDVCHST"<-as.character(source_2010$"XDVCHST")
source_2010$"XDVCHSM"<-as.character(source_2010$"XDVCHSM")
source_2010$"XDVCHSW"<-as.character(source_2010$"XDVCHSW")
source_2010$"XDVCWHT"<-as.character(source_2010$"XDVCWHT")
source_2010$"XDVCWHM"<-as.character(source_2010$"XDVCWHM")
source_2010$"XDVCWHW"<-as.character(source_2010$"XDVCWHW")
#Remove quotes from data
gsub('"', "", db_2010)
str(source_2010)
# display more digits
options(digits=15)
#set working directory and access code to read in SQL queries
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("..\\..\\..\\..\\Common_functions\\Loading_in_packages.R")
source("..\\..\\..\\..\\Common_functions\\readSQL.R")
getwd()
#PeMS Highway Counts 11/2018-08/2019 Station Hour
#Read in text files
source1 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2018_11.txt", header=FALSE, sep=",")
source2 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2018_12.txt", header=FALSE, sep=",")
source3 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2019_01.txt", header=FALSE, sep=",")
source4 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2019_02.txt", header=FALSE, sep=",")
source5 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2019_03.txt", header=FALSE, sep=",")
source6 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2019_04.txt", header=FALSE, sep=",")
source7 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2019_05.txt", header=FALSE, sep=",")
source8 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2019_06.txt", header=FALSE, sep=",")
source9 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2019_07.txt", header=FALSE, sep=",")
source10 <- read.delim("R:\\DPOE\\Highway Counts\\Caltrans Performance Measurement System (PeMS)\\2019\\Station hour\\Source\\d11_text_station_hour_2019_08.txt", header=FALSE, sep=",")
#Merge source files into one file
source <- do.call("rbind", list(source1, source2, source3, source4, source5, source6, source7, source8, source9, source10))
#Remove other source files
rm(source1,source2,source3,source4,source5,source6,source7,source8,source9,source10)
head(source)
#Check data types
str(source)
#Rename source data. Make sure order is the same as in the database.
source <- plyr::rename(source, c("V1"="timestamp","V2"="station","V3"="district","V4"="route","V5"="direction","V6"="type","V7"="seg_length","V8"="samples","V9"="observed","V10"="total_flow","V11"="avg_occ","V12"="avg_speed","V13"="delay35","V14"="delay40","V15"="delay45","V16"="delay50","V17"="delay55","V18"="delay60","V19"="l1_flow","V20"="l1_occ","V21"="l1_speed","V22"="l2_flow","V23"="l2_occ","V24"="l2_speed","V25"="l3_flow","V26"="l3_occ","V27"="l3_speed","V28"="l4_flow","V29"="l4_occ","V30"="l4_speed","V31"="l5_flow","V32"="l5_occ","V33"="l5_speed","V34"="l6_flow","V35"="l6_occ","V36"="l6_speed","V37"="l7_flow","V38"="l7_occ","V39"="l7_speed","V40"="l8_flow","V41"="l8_occ","V42"="l8_speed"))
#Check data types
str(source)
source$timestamp <- as.POSIXlt.Date(source$timestamp)
source$direction <- as.character(source$direction)
source$type <- as.character(source$type)
str(source)
#Load database data
options(stringsAsFactors=FALSE)
channel <- odbcDriverConnect('driver={SQL Server}; server=socioeca8; database=dpoe_stage; trusted_connection=true')
sql_query <- 'SELECT * FROM dpoe_stage.staging.pems_hour'
db <- sqlQuery(channel,sql_query,stringsAsFactors = FALSE)
odbcClose(channel)
str(db)
source$timestamp <- as.POSIXct.Date(source$timestamp)
