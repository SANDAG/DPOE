source12$SUM_KNEELS <- NA
source13$SUM_KNEELS <- NA
source14$SUM_KNEELS <- NA
source15$SUM_KNEELS <- NA
#MAX_LOAD
source02$MAX_LOAD <- NA
source03$MAX_LOAD <- NA
source04$MAX_LOAD <- NA
source05$MAX_LOAD <- NA
source06$MAX_LOAD <- NA
source07$MAX_LOAD <- NA
#MAX_LOAD_P
source02$MAX_LOAD_P <- NA
source03$MAX_LOAD_P <- NA
source04$MAX_LOAD_P <- NA
source05$MAX_LOAD_P <- NA
source06$MAX_LOAD_P <- NA
source07$MAX_LOAD_P <- NA
source08$MAX_LOAD_P <- NA
source09$MAX_LOAD_P <- NA
source10$MAX_LOAD_P <- NA
source11$MAX_LOAD_P <- NA
source12$MAX_LOAD_P <- NA
source13$MAX_LOAD_P <- NA
source14$MAX_LOAD_P <- NA
source15$MAX_LOAD_P <- NA
#AVG_MAX_LOAD
source02$AVG_MAX_LOAD <- NA
source03$AVG_MAX_LOAD <- NA
source04$AVG_MAX_LOAD <- NA
source05$AVG_MAX_LOAD <- NA
source06$AVG_MAX_LOAD <- NA
source07$AVG_MAX_LOAD <- NA
#SUM_TP_EARLY
source02$SUM_TP_EARLY <- NA
source03$SUM_TP_EARLY <- NA
source04$SUM_TP_EARLY <- NA
source05$SUM_TP_EARLY <- NA
source06$SUM_TP_EARLY <- NA
source07$SUM_TP_EARLY <- NA
#SUM_TP_ONTIME
source02$SUM_TP_ONTIME <- NA
source03$SUM_TP_ONTIME <- NA
source04$SUM_TP_ONTIME <- NA
source05$SUM_TP_ONTIME <- NA
source06$SUM_TP_ONTIME <- NA
source07$SUM_TP_ONTIME <- NA
#SUM_TP_LATE
source02$SUM_TP_LATE <- NA
source03$SUM_TP_LATE <- NA
source04$SUM_TP_LATE <- NA
source05$SUM_TP_LATE <- NA
source06$SUM_TP_LATE <- NA
source07$SUM_TP_LATE <- NA
#ONTIME
source02$ONTIME <- NA
source03$ONTIME <- NA
source04$ONTIME <- NA
source05$ONTIME <- NA
source06$ONTIME <- NA
source07$ONTIME <- NA
#AVG_PASSENGERS_ON
source02$AVG_PASSENGERS_ON <- NA
source03$AVG_PASSENGERS_ON <- NA
source04$AVG_PASSENGERS_ON <- NA
source05$AVG_PASSENGERS_ON <- NA
source06$AVG_PASSENGERS_ON <- NA
source07$AVG_PASSENGERS_ON <- NA
#AVG_PASSENGERS_OFF
source02$AVG_PASSENGERS_OFF <- NA
source03$AVG_PASSENGERS_OFF <- NA
source04$AVG_PASSENGERS_OFF <- NA
source05$AVG_PASSENGERS_OFF <- NA
source06$AVG_PASSENGERS_OFF <- NA
source07$AVG_PASSENGERS_OFF <- NA
#AVG_REVENUE_MILES
source02$AVG_REVENUE_MILES <- NA
source03$AVG_REVENUE_MILES <- NA
source04$AVG_REVENUE_MILES <- NA
source05$AVG_REVENUE_MILES <- NA
source06$AVG_REVENUE_MILES <- NA
source07$AVG_REVENUE_MILES <- NA
#AVG_REVENUE_HOURS
source02$AVG_REVENUE_HOURS <- NA
source03$AVG_REVENUE_HOURS <- NA
source04$AVG_REVENUE_HOURS <- NA
source05$AVG_REVENUE_HOURS <- NA
source06$AVG_REVENUE_HOURS <- NA
source07$AVG_REVENUE_HOURS <- NA
#AVG_PASSENGER_MILES
source02$AVG_PASSENGER_MILES <- NA
source03$AVG_PASSENGER_MILES <- NA
source04$AVG_PASSENGER_MILES <- NA
source05$AVG_PASSENGER_MILES <- NA
source06$AVG_PASSENGER_MILES <- NA
source07$AVG_PASSENGER_MILES <- NA
#sum_seat_miles
source02 <- transform(source02, SUM_SEAT_MILES = ...7/...13)
source03 <- transform(source03, SUM_SEAT_MILES = ...7/pass_mi_1)
source04 <- transform(source04, SUM_SEAT_MILES = passenger_miles/PASSENGER_MILES_PER_SEAT_MILE)
source05 <- transform(source05, SUM_SEAT_MILES = passenger_miles/PASSENGER_MILES_PER_SEAT_MILE)
source06 <- transform(source06, SUM_SEAT_MILES = passenger_miles/PASSENGER_MILES_PER_SEAT_MILE)
source08$SUM_SEAT_MILES <- NA
#AVG_SEAT_MILES
source02$AVG_SEAT_MILES <- NA
source03$AVG_SEAT_MILES <- NA
source04$AVG_SEAT_MILES <- NA
source05$AVG_SEAT_MILES <- NA
source06$AVG_SEAT_MILES <- NA
source07$AVG_SEAT_MILES <- NA
source08$AVG_SEAT_MILES <- NA
#AVG_TRIP_LENGTH_MILES
source08$AVG_TRIP_LENGTH_MILES <- NA
#passenger_miles_per_seat_mile
source08$PASSENGER_MILES_PER_SEAT_MILE <- NA
source09 <- transform(source09, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source10 <- transform(source10, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source11 <- transform(source11, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source12 <- transform(source12, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source13 <- transform(source13, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source14 <- transform(source14, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source15 <- transform(source15, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source16 <- transform(source16, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source17 <- transform(source17, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source18 <- transform(source18, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
source19 <- transform(source19, PASSENGER_MILES_PER_SEAT_MILE = SUM_PASSENGER_MILES/SUM_SEAT_MILES)
#VEHICLE_SPEED_MPH
source08 <- transform(source08, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source10 <- transform(source10, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source11 <- transform(source11, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source12 <- transform(source12, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source13 <- transform(source13, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source14 <- transform(source14, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source15 <- transform(source15, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source16 <- transform(source16, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source17 <- transform(source17, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source18 <- transform(source18, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
source19 <- transform(source19, VEHICLE_SPEED_MPH = SUM_REVENUE_MILES/SUM_REVENUE_HOURS)
#PASSENGER_HOURS
source08$PASSENGER_HOURS <- NA
source09$PASSENGER_HOURS <- NA
source10$PASSENGER_HOURS <- NA
source11$PASSENGER_HOURS <- NA
source12$PASSENGER_HOURS <- NA
source13$PASSENGER_HOURS <- NA
source14$PASSENGER_HOURS <- NA
source15$PASSENGER_HOURS <- NA
source16$PASSENGER_HOURS <- NA
source17$PASSENGER_HOURS <- NA
source18$PASSENGER_HOURS <- NA
source19$PASSENGER_HOURS <- NA
#AVG_TRIP_LENGTH_MINUTES
source08$AVG_TRIP_LENGTH_MINUTES <- NA
source09$AVG_TRIP_LENGTH_MINUTES <- NA
source10$AVG_TRIP_LENGTH_MINUTES <- NA
source11$AVG_TRIP_LENGTH_MINUTES <- NA
source12$AVG_TRIP_LENGTH_MINUTES <- NA
source13$AVG_TRIP_LENGTH_MINUTES <- NA
source14$AVG_TRIP_LENGTH_MINUTES <- NA
source15$AVG_TRIP_LENGTH_MINUTES <- NA
source16$AVG_TRIP_LENGTH_MINUTES <- NA
source17$AVG_TRIP_LENGTH_MINUTES <- NA
source18$AVG_TRIP_LENGTH_MINUTES <- NA
source19$AVG_TRIP_LENGTH_MINUTES <- NA
#PASSENGER_MILES_PER_GALLON_FUEL
source08$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source09$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source10$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source11$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source12$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source13$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source14$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source15$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source16$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source17$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source18$PASSENGER_MILES_PER_GALLON_FUEL <- NA
source19$PASSENGER_MILES_PER_GALLON_FUEL <- NA
#Drop columns from source
source07 <- select(source07, -17:-28)
source11 <- select(source11, -33)
source12 <- select(source12, -33:-38)
source13 <- select(source13, -33:-36)
source14 <- select(source14, -33)
#Drop rows from source
source02 <- source02[-1:-3,]
source03 <- source03[-1:-3,]
source02 <- source02[!is.na(source02$"...2"), ]
source03 <- source03[!is.na(source03$"...1"), ]
source03 <- source03[!is.na(source03$"...2"), ]
source04 <- source04[!is.na(source04$"Month..Counted"), ]
source05 <- source05[!is.na(source05$"Month..Counted"), ]
source06 <- source06[!is.na(source06$"Month..Counted"), ]
source07 <- source07[!is.na(source07$"Month\r\nCounted"), ]
source08 <- source08[!is.na(source08$"ROUTE_NAME"), ]
source09 <- source09[!is.na(source09$"ROUTE_NAME"), ]
source10 <- source10[!is.na(source10$"ROUTE_NAME"), ]
source11 <- source11[!is.na(source11$"ROUTE_NAME"), ]
source15 <- source15[!is.na(source15$"ROUTE_NAME"), ]
source16 <- source16[!is.na(source16$"ROUTE_NAME"), ]
source17 <- source17[!is.na(source17$"ROUTE_NAME"), ]
source18 <- source18[!is.na(source18$"ROUTE_NAME"), ]
source19 <- source19[!is.na(source19$"ROUTE_NAME"), ]
#Rename files
source02 <- plyr::rename(source02, c("X2002"="ROUTE_NUM", "...2"="DATE_COUNTED", "...3"="TRIPS", "...4"="SUM_PASSENGERS_ON", "...5"="SUM_REVENUE_MILES", "...6"="AVG_PASS_PER_MILE", "...7"="SUM_PASSENGER_MILES", "...8"="AVG_TRIP_LENGTH_MILES", "...9"="SUM_REVENUE_HOURS", "...10"="AVG_PASS_PER_HOUR", "...11"="PASSENGER_HOURS", "...12"="AVG_TRIP_LENGTH_MINUTES", "...13"="PASSENGER_MILES_PER_SEAT_MILE", "...14"="PASSENGER_MILES_PER_GALLON_FUEL", "...15"="VEHICLE_SPEED_MPH"))
source03 <- plyr::rename(source03, c("...1"="ROUTE_NUM", "...2"="DATE_COUNTED", "...3"="TRIPS", "...4"="SUM_PASSENGERS_ON", "...5"="SUM_REVENUE_MILES", "average_1"="AVG_PASS_PER_MILE", "...7"="SUM_PASSENGER_MILES", "...8"="AVG_TRIP_LENGTH_MILES", "...9"="SUM_REVENUE_HOURS", "average_2"="AVG_PASS_PER_HOUR", "...11"="PASSENGER_HOURS", "...12"="AVG_TRIP_LENGTH_MINUTES", "pass_mi_1"="PASSENGER_MILES_PER_SEAT_MILE", "pass_mi_2"="PASSENGER_MILES_PER_GALLON_FUEL", "...15"="VEHICLE_SPEED_MPH"))
source04 <- plyr::rename(source04, c("Route"="ROUTE_NUM", "Month..Counted"="DATE_COUNTED", "X..Of..Trips"="TRIPS", "X..Of..Passengers"="SUM_PASSENGERS_ON", "Revenue..Miles"="SUM_REVENUE_MILES", "Passengers..Per.Mile"="AVG_PASS_PER_MILE", "passenger_miles"="SUM_PASSENGER_MILES", "Ave..Trip..Length...Miles."="AVG_TRIP_LENGTH_MILES", "Revenue..Hours"="SUM_REVENUE_HOURS", "Passengers..Per.Hour"="AVG_PASS_PER_HOUR", "Passenger..Hours"="PASSENGER_HOURS", "Ave..Trip..Length...Minutes."="AVG_TRIP_LENGTH_MINUTES", "Passenger..Miles.Per..Gal.Fuel"="PASSENGER_MILES_PER_GALLON_FUEL", "Vehicle..Speed"="VEHICLE_SPEED_MPH"))
source05 <- plyr::rename(source05, c("Route"="ROUTE_NUM", "Month..Counted"="DATE_COUNTED", "X..Of..Trips"="TRIPS", "X..Of..Passengers"="SUM_PASSENGERS_ON", "Revenue..Miles"="SUM_REVENUE_MILES", "Passengers..Per.Mile"="AVG_PASS_PER_MILE", "passenger_miles"="SUM_PASSENGER_MILES", "Avg..Trip..Length...Miles."="AVG_TRIP_LENGTH_MILES", "Revenue..Hours"="SUM_REVENUE_HOURS", "Passengers..Per.Hour"="AVG_PASS_PER_HOUR", "Passenger..Hours"="PASSENGER_HOURS", "Avg..Trip..Length...Minutes."="AVG_TRIP_LENGTH_MINUTES", "Passenger..Miles.Per..Gal...Fuel"="PASSENGER_MILES_PER_GALLON_FUEL", "Vehicle..Speed..MPH."="VEHICLE_SPEED_MPH"))
source06 <- plyr::rename(source06, c("Route"="ROUTE_NUM", "Month..Counted"="DATE_COUNTED", "X..Of..Trips"="TRIPS", "X..Of..Passengers"="SUM_PASSENGERS_ON", "Revenue..Miles"="SUM_REVENUE_MILES", "Passengers..Per.Mile"="AVG_PASS_PER_MILE", "passenger_miles"="SUM_PASSENGER_MILES", "Avg..Trip..Length...Miles."="AVG_TRIP_LENGTH_MILES", "Revenue..Hours"="SUM_REVENUE_HOURS", "Passengers..Per.Hour"="AVG_PASS_PER_HOUR", "Passenger..Hours"="PASSENGER_HOURS", "Avg..Trip..Length...Minutes."="AVG_TRIP_LENGTH_MINUTES", "Passenger..Miles.Per..Gal...Fuel"="PASSENGER_MILES_PER_GALLON_FUEL", "Vehicle..Speed..MPH."="VEHICLE_SPEED_MPH"))
source07 <- plyr::rename(source07, c("Route"="ROUTE_NUM", "Month\r\nCounted"="DATE_COUNTED", "# Of\r\nTrips"="TRIPS", "# Of\r\nPassengers"="SUM_PASSENGERS_ON", "Revenue\r\nMiles"="SUM_REVENUE_MILES", "Passengers\r\nPer Mile"="AVG_PASS_PER_MILE", "Passenger\r\nMiles"="SUM_PASSENGER_MILES", "Avg. Trip\r\nLength\r\n(Miles)"="AVG_TRIP_LENGTH_MILES", "Revenue\r\nHours"="SUM_REVENUE_HOURS", "Passengers\r\nPer Hour"="AVG_PASS_PER_HOUR", "Passenger\r\nHours"="PASSENGER_HOURS", "Avg. Trip\r\nLength\r\n(Minutes)"="AVG_TRIP_LENGTH_MINUTES", "Passenger\r\nMiles Per\r\nSeat Mile"="PASSENGER_MILES_PER_SEAT_MILE", "Passenger\r\nMiles Per\r\nGal., Fuel"="PASSENGER_MILES_PER_GALLON_FUEL", "Vehicle\r\nSpeed (MPH)"="VEHICLE_SPEED_MPH", "Seat miles"="SUM_SEAT_MILES"))
source08 <- plyr::rename(source08, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "TRIPS_COUNT"="TRIPS_GROSS"))
source09 <- plyr::rename(source09, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "TRIPS_COUNT"="TRIPS_GROSS","ATL"="AVG_TRIP_LENGTH_MILES","SPEED"="VEHICLE_SPEED_MPH"))
source10 <- plyr::rename(source10, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "TRIPS_COUNT"="TRIPS_GROSS", "Average.Trip.Length"="AVG_TRIP_LENGTH_MILES"))
source11 <- plyr::rename(source11, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "AVERAGE_TRIP_LENGTH"="AVG_TRIP_LENGTH_MILES"))
source12 <- plyr::rename(source12, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "AVG_TRIP_LENGTH"="AVG_TRIP_LENGTH_MILES"))
source13 <- plyr::rename(source13, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "AVG_TRIP_LENGTH"="AVG_TRIP_LENGTH_MILES"))
source14 <- plyr::rename(source14, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "AVG_TRIP_LENGTH"="AVG_TRIP_LENGTH_MILES"))
source15 <- plyr::rename(source15, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "AVG_TRIP_LENGTH"="AVG_TRIP_LENGTH_MILES"))
source16 <- plyr::rename(source16, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "AVG_TRIP_LENGTH"="AVG_TRIP_LENGTH_MILES", "MAX_MAX_LOAD_P"="MAX_LOAD_P"))
source17 <- plyr::rename(source17, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "AVG_TRIP_LENGTH"="AVG_TRIP_LENGTH_MILES", "MAX_MAX_LOAD_P"="MAX_LOAD_P"))
source18 <- plyr::rename(source18, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "AVG_TRIP_LENGTH"="AVG_TRIP_LENGTH_MILES", "MAX_MAX_LOAD_P"="MAX_LOAD_P"))
source19 <- plyr::rename(source19, c("ROUTE_NUMBER"="ROUTE_NUM", "MAX_MAX_LOAD"="MAX_LOAD", "AVG_TRIP_LENGTH"="AVG_TRIP_LENGTH_MILES", "MAX_MAX_LOAD_P"="MAX_LOAD_P"))
###################TESTING#########################################
#Special case for Route 3 prior to 2008
#2002
df <- merge(x=source08,y=source02,by="ROUTE_NUM",all.y=TRUE) #151
df <- df[order(df[,1]), ]
source02 <- source02[order(source02[,1]), ]
source02$SERVICE_CLASS <- df$SERVICE_CLASS.x
#2003
df <- merge(x=source08,y=source03,by="ROUTE_NUM",all.y=TRUE) #166
df <- df[order(df[,1]), ]
source03 <- source03[order(source03[,1]), ]
source03$SERVICE_CLASS <- df$SERVICE_CLASS.x
#2004
df <- merge(x=source08,y=source04,by="ROUTE_NUM",all.y=TRUE) #164
df <- df[order(df[,1]), ]
source04 <- source04[order(source04[,1]), ]
source04$SERVICE_CLASS <- df$SERVICE_CLASS.x
#2005
df <- merge(x=source08,y=source05,by="ROUTE_NUM",all.y=TRUE) #164
df <- df[order(df[,1]), ]
source05 <- source05[order(source05[,1]), ]
source05$SERVICE_CLASS <- df$SERVICE_CLASS.x
#2006
df <- merge(x=source08,y=source06,by="ROUTE_NUM",all.y=TRUE) #161
df <- df[order(df[,1]), ]
source06 <- source06[order(source06[,1]), ]
source06$SERVICE_CLASS <- df$SERVICE_CLASS.x
#2007
df <- merge(x=source08,y=source07,by="ROUTE_NUM",all.y=TRUE) #150
df <- df[order(df[,1]), ]
source07 <- source07[order(source07[,1]), ]
source07$SERVICE_CLASS <- df$SERVICE_CLASS.x
rm(df)
#Rail
source02$SERVICE_CLASS <- ifelse(source02$ROUTE_NUM == "Orange Line" | source02$ROUTE_NUM == "Blue Line", "Rail", source02$SERVICE_CLASS)
source03$SERVICE_CLASS <- ifelse(source03$ROUTE_NUM == "Orange Line" | source03$ROUTE_NUM == "Blue Line", "Rail", source03$SERVICE_CLASS)
source04$SERVICE_CLASS <- ifelse(source04$ROUTE_NUM == "Orange Line" | source04$ROUTE_NUM == "Blue Line", "Rail", source04$SERVICE_CLASS)
source05$SERVICE_CLASS <- ifelse(source05$ROUTE_NUM == "Orange Line" | source05$ROUTE_NUM == "Blue Line", "Rail", source05$SERVICE_CLASS)
source06$SERVICE_CLASS <- ifelse(source06$ROUTE_NUM == "Orange Line" | source06$ROUTE_NUM == "Blue Line" | source06$ROUTE_NUM == "Green Line", "Rail", source06$SERVICE_CLASS)
source07$SERVICE_CLASS <- ifelse(source07$ROUTE_NUM == "Orange Line" | source07$ROUTE_NUM == "Blue Line" | source07$ROUTE_NUM == "Green Line", "Rail", source07$SERVICE_CLASS)
#Coaster
source02$SERVICE_CLASS <- ifelse(source02$ROUTE_NUM == "Coaster", "Coaster", source02$SERVICE_CLASS)
source03$SERVICE_CLASS <- ifelse(source03$ROUTE_NUM == "Coaster*", "Coaster", source03$SERVICE_CLASS)
source04$SERVICE_CLASS <- ifelse(source04$ROUTE_NUM == "COASTER", "Coaster", source04$SERVICE_CLASS)
source05$SERVICE_CLASS <- ifelse(source05$ROUTE_NUM == "COASTER", "Coaster", source05$SERVICE_CLASS)
source06$SERVICE_CLASS <- ifelse(source06$ROUTE_NUM == "COASTER", "Coaster", source06$SERVICE_CLASS)
source07$SERVICE_CLASS <- ifelse(source07$ROUTE_NUM == "COASTER", "Coaster", source07$SERVICE_CLASS)
###################################################################
#Merge source files into one file
source <- do.call("rbind", list(source02,source03,source04,source05,source06,source07,source08,source09,source10,source11,source12,source13,source14,source15,source16,source17,source18,source19))
#Remove other source files
rm(source02,source03,source04,source05,source06,source07,source08,source09,source10,source11,source12,source13,source14,source15,source16,source17,source18,source19)
#Add vintage year to source data table
source$VINTAGE_YR <- "2019"
#Rename files
db <- plyr::rename(db, c("vintage_yr"="VINTAGE_YR","yr"="YR","date_counted"="DATE_COUNTED","route_num"="ROUTE_NUM","route_name"="ROUTE_NAME","service_code"="SERVICE_CODE","service_type"="SERVICE_TYPE","service_class"="SERVICE_CLASS","service_mode"="SERVICE_MODE","trips"="TRIPS","trips_gross"="TRIPS_GROSS","sum_passengers_on"="SUM_PASSENGERS_ON","sum_fon"="SUM_FON","sum_ron"="SUM_RON","sum_passengers_off"="SUM_PASSENGERS_OFF","sum_foff"="SUM_FOFF","sum_roff"="SUM_ROFF","sum_wheelchairs"="SUM_WHEELCHAIRS","sum_bicycles"="SUM_BICYCLES","sum_kneels"="SUM_KNEELS","max_load"="MAX_LOAD","max_load_p"="MAX_LOAD_P","avg_max_load"="AVG_MAX_LOAD","sum_tp_early"="SUM_TP_EARLY","sum_tp_ontime"="SUM_TP_ONTIME","sum_tp_late"="SUM_TP_LATE","ontime"="ONTIME","sum_revenue_miles"="SUM_REVENUE_MILES","sum_revenue_hours"="SUM_REVENUE_HOURS","avg_passengers_on"="AVG_PASSENGERS_ON","avg_passengers_off"="AVG_PASSENGERS_OFF","avg_revenue_miles"="AVG_REVENUE_MILES","avg_revenue_hours"="AVG_REVENUE_HOURS","sum_passenger_miles"="SUM_PASSENGER_MILES","avg_passenger_miles"="AVG_PASSENGER_MILES","sum_seat_miles"="SUM_SEAT_MILES","avg_pass_per_mile"="AVG_PASS_PER_MILE","avg_pass_per_hour"="AVG_PASS_PER_HOUR","avg_seat_miles"="AVG_SEAT_MILES","avg_trip_length_miles"="AVG_TRIP_LENGTH_MILES","passenger_miles_per_seat_mile"="PASSENGER_MILES_PER_SEAT_MILE","vehicle_speed_mph"="VEHICLE_SPEED_MPH","passenger_hours"="PASSENGER_HOURS","avg_trip_length_minutes"="AVG_TRIP_LENGTH_MINUTES","passenger_miles_per_gallon_fuel"="PASSENGER_MILES_PER_GALLON_FUEL"))
#Order source file
source <- source[,c("VINTAGE_YR","YR","DATE_COUNTED","ROUTE_NUM","ROUTE_NAME","SERVICE_CODE","SERVICE_TYPE","SERVICE_CLASS","SERVICE_MODE","TRIPS","TRIPS_GROSS","SUM_PASSENGERS_ON","SUM_FON","SUM_RON","SUM_PASSENGERS_OFF","SUM_FOFF","SUM_ROFF","SUM_WHEELCHAIRS","SUM_BICYCLES","SUM_KNEELS","MAX_LOAD","MAX_LOAD_P","AVG_MAX_LOAD","SUM_TP_EARLY","SUM_TP_ONTIME","SUM_TP_LATE","ONTIME","SUM_REVENUE_MILES","SUM_REVENUE_HOURS","AVG_PASSENGERS_ON","AVG_PASSENGERS_OFF","AVG_REVENUE_MILES","AVG_REVENUE_HOURS","SUM_PASSENGER_MILES","AVG_PASSENGER_MILES","SUM_SEAT_MILES","AVG_PASS_PER_MILE","AVG_PASS_PER_HOUR","AVG_SEAT_MILES","AVG_TRIP_LENGTH_MILES","PASSENGER_MILES_PER_SEAT_MILE","VEHICLE_SPEED_MPH","PASSENGER_HOURS","AVG_TRIP_LENGTH_MINUTES","PASSENGER_MILES_PER_GALLON_FUEL")]
#delete rownames for checking files match
rownames(source) <- NULL
rownames(db) <- NULL
#Replace route names with route numbers in ROUTE_NUM column
source$ROUTE_NUM[source$ROUTE_NUM == "Coaster*"] <- "398"
source$ROUTE_NUM[source$ROUTE_NUM == "Coaster"] <- "398"
source$ROUTE_NUM[source$ROUTE_NUM == "COASTER"] <- "398"
source$ROUTE_NUM[source$ROUTE_NUM == "Blue Line"] <- "510"
source$ROUTE_NUM[source$ROUTE_NUM == "Orange Line"] <- "520"
source$ROUTE_NUM[source$ROUTE_NUM == "Green Line"] <- "530"
source$ROUTE_NUM[source$ROUTE_NUM == "Encinitas Coaster Connection"] <- NA
source$DATE_COUNTED[source$DATE_COUNTED == "Spring 2007"] <- NA
#Convert data types
source$VINTAGE_YR <- as.integer(source$VINTAGE_YR)
source$YR <- as.integer(source$YR)
#Convert DATE_COUNTED data type
t <- 2004:2006
tt <- anydate(as.numeric(as.character(source$DATE_COUNTED))[which(source$YR %in% t)], tz = "UTC")
source$DATE_COUNTED <- as.Date(as.numeric(as.character(source$DATE_COUNTED)), origin = "1899-12-30", format = "%Y-%m-%d")
source[318:806,3] <- tt
db$DATE_COUNTED <- as.Date(db$DATE_COUNTED)
#Convert data types
source$ROUTE_NUM <- as.numeric(source$ROUTE_NUM)
source$TRIPS <- as.integer(source$TRIPS)
source$TRIPS_GROSS <- as.integer(source$TRIPS_GROSS)
source$SUM_PASSENGERS_ON <- as.numeric(source$SUM_PASSENGERS_ON)
source$SUM_FON <- as.integer(source$SUM_FON)
source$SUM_RON <- as.integer(source$SUM_RON)
source$SUM_FOFF <- as.integer(source$SUM_FOFF)
source$SUM_ROFF <- as.integer(source$SUM_ROFF)
source$SUM_WHEELCHAIRS <- as.integer(source$SUM_WHEELCHAIRS)
source$SUM_BICYCLES <- as.integer(source$SUM_BICYCLES)
source$SUM_KNEELS <- as.integer(source$SUM_KNEELS)
source$SUM_REVENUE_MILES <- as.numeric(source$SUM_REVENUE_MILES)
source$SUM_REVENUE_HOURS <- as.numeric(source$SUM_REVENUE_HOURS)
source$AVG_PASS_PER_MILE <- as.numeric(source$AVG_PASS_PER_MILE)
source$AVG_PASS_PER_HOUR <- as.numeric(source$AVG_PASS_PER_HOUR)
source$AVG_TRIP_LENGTH_MILES <- as.numeric(source$AVG_TRIP_LENGTH_MILES)
source$VEHICLE_SPEED_MPH <- as.numeric(source$VEHICLE_SPEED_MPH)
source$PASSENGER_HOURS <- as.numeric(source$PASSENGER_HOURS)
source$AVG_TRIP_LENGTH_MINUTES <- as.numeric(source$AVG_TRIP_LENGTH_MINUTES)
source$PASSENGER_MILES_PER_GALLON_FUEL <- as.numeric(source$PASSENGER_MILES_PER_GALLON_FUEL)
#Replace route_name na's with Encinitas Coaster COnnection where DATE_COUNTED = "2002-06-02"
#source[83,5] <- "Encinitas Coaster Connection"
source$ROUTE_NAME <- ifelse(source$DATE_COUNTED == "2002-06-02" & is.na(source$ROUTE_NAME) & is.na(source$ROUTE_NUM),"Encinitas Coaster Connection",source$ROUTE_NAME)
#unique(source$ROUTE_NAME)
#Round digits to account for the impreciseness of the float data type in the SQL database
source$AVG_PASS_PER_MILE <- round(source$AVG_PASS_PER_MILE,10)
db$AVG_PASS_PER_MILE <- round(db$AVG_PASS_PER_MILE,10)
source$AVG_PASS_PER_HOUR <- round(source$AVG_PASS_PER_HOUR,10)
db$AVG_PASS_PER_HOUR <- round(db$AVG_PASS_PER_HOUR,10)
source$AVG_TRIP_LENGTH_MILES <- round(source$AVG_TRIP_LENGTH_MILES,9)
db$AVG_TRIP_LENGTH_MILES <- round(db$AVG_TRIP_LENGTH_MILES,9)
source$VEHICLE_SPEED_MPH <- round(source$VEHICLE_SPEED_MPH,10)
db$VEHICLE_SPEED_MPH <- round(db$VEHICLE_SPEED_MPH,10)
source$PASSENGER_HOURS <- round(source$PASSENGER_HOURS,8)
db$PASSENGER_HOURS <- round(db$PASSENGER_HOURS,8)
source$AVG_TRIP_LENGTH_MINUTES <- round(source$AVG_TRIP_LENGTH_MINUTES,10)
db$AVG_TRIP_LENGTH_MINUTES <- round(db$AVG_TRIP_LENGTH_MINUTES,10)
source$PASSENGER_MILES_PER_GALLON_FUEL <- round(source$PASSENGER_MILES_PER_GALLON_FUEL,10)
db$PASSENGER_MILES_PER_GALLON_FUEL <- round(db$PASSENGER_MILES_PER_GALLON_FUEL,10)
#Order source file
source <- source[,c("VINTAGE_YR","YR","DATE_COUNTED","ROUTE_NUM","ROUTE_NAME","SERVICE_CODE","SERVICE_TYPE","SERVICE_CLASS","SERVICE_MODE","TRIPS","TRIPS_GROSS","SUM_PASSENGERS_ON","SUM_FON","SUM_RON","SUM_PASSENGERS_OFF","SUM_FOFF","SUM_ROFF","SUM_WHEELCHAIRS","SUM_BICYCLES","SUM_KNEELS","MAX_LOAD","MAX_LOAD_P","AVG_MAX_LOAD","SUM_TP_EARLY","SUM_TP_ONTIME","SUM_TP_LATE","ONTIME","SUM_REVENUE_MILES","SUM_REVENUE_HOURS","AVG_PASSENGERS_ON","AVG_PASSENGERS_OFF","AVG_REVENUE_MILES","AVG_REVENUE_HOURS","SUM_PASSENGER_MILES","AVG_PASSENGER_MILES","SUM_SEAT_MILES","AVG_PASS_PER_MILE","AVG_PASS_PER_HOUR","AVG_SEAT_MILES","AVG_TRIP_LENGTH_MILES","PASSENGER_MILES_PER_SEAT_MILE","VEHICLE_SPEED_MPH","PASSENGER_HOURS","AVG_TRIP_LENGTH_MINUTES","PASSENGER_MILES_PER_GALLON_FUEL")]
source <- source[order(source$VINTAGE_YR,source$YR,source$DATE_COUNTED,source$ROUTE_NUM), ]
db <- db[order(db$VINTAGE_YR,db$YR,db$DATE_COUNTED,db$ROUTE_NUM), ]
#delete rownames for checking files match
rownames(source) <- NULL
rownames(db) <- NULL
# compare source to database files to ensure they match
all(source == db)
all.equal(source,db)
identical(source,db)
which(source!=db, arr.ind=TRUE)
# db[318,3]
# source[318,3]
#### Testing if the data match without the 2004-2006 data ###########
# #Create subset without 2004-2006 data
# source_wo <- subset(source, YR != 2004 & YR != 2005 & YR != 2006)
# db_wo <- subset(db, YR != 2004 & YR != 2005 & YR != 2006)
#
# #Order files
# source_wo <- source_wo[order(source_wo$VINTAGE_YR,source_wo$YR,source_wo$DATE_COUNTED,source_wo$ROUTE_NUM), ]
# db_wo <- db_wo[order(db_wo$VINTAGE_YR,db_wo$YR,db_wo$DATE_COUNTED,db_wo$ROUTE_NUM), ]
#
# #delete rownames for checking files match
# rownames(source_wo) <- NULL
# rownames(db_wo) <- NULL
#
# all(source_wo == db_wo)
# all.equal(source_wo,db_wo)
# all.equal(source_wo,db_wo, check.attributes=FALSE)
# identical(source_wo,db_wo)
# which(source_wo!=db_wo, arr.ind=TRUE)
#
# str(source_wo)
# str(db_wo)
#
# # db_wo[467,43]
# # source_wo[467,43]
# # all.equal(db_wo[443,37],source_wo[443,37])
###TESTING why I'm getting a NA value mismatch####
# unique(source$SERVICE_CLASS)
# unique(db$SERVICE_CLASS)
#
# sum(is.na(source$SERVICE_CLASS)) #281
# sum(is.na(db$SERVICE_CLASS)) #261
#
# table(source$SERVICE_CLASS)
# table(db$SERVICE_CLASS) #problem with coaster and rail
#
# yy <- table(source$ROUTE_NAME)
# xx <- table(db$ROUTE_NAME)
#
# route_source <- table(source$ROUTE_NAME)
# route_db <- table(db$ROUTE_NAME)
# all.equal(route_source,route_db)
#
# write.csv(source, file = "M:\\TEMP\\LOU\\Source.csv",row.names=FALSE, na="NA")
# write.csv(db, file = "M:\\TEMP\\LOU\\DB.csv",row.names=FALSE, na="NA")
#
# write.csv(yy, file = "M:\\TEMP\\LOU\\Source.csv",row.names=FALSE, na="NA")
# write.csv(xx, file = "M:\\TEMP\\LOU\\DB.csv",row.names=FALSE, na="NA")
#
# str(source)
# str(db)
#########################################################################################################################################
#Source to fact table QA
#Load fact table
options(stringsAsFactors=FALSE)
channel <- odbcDriverConnect('driver={SQL Server}; server=socioeca8; database=dpoe_stage; trusted_connection=true')
sql_query1 <- read_file("Fact table QAQC.sql")
fact <- sqlQuery(channel,sql_query1,stringsAsFactors = FALSE)
odbcClose(channel)
#Check data types
# str(source)
# str(fact)
#Convert data types
fact$date_counted <- as.Date(fact$date_counted)
#Rename source columns
names(source)[1:45] <- tolower(names(source)[1:45])
#Assign names to routes before 2008
#Create a subset of data for each year
x02 <- subset(source, yr == 2002)
x03 <- subset(source, yr == 2003)
x04 <- subset(source, yr == 2004)
x05 <- subset(source, yr == 2005)
x06 <- subset(source, yr == 2006)
x07 <- subset(source, yr == 2007)
x08 <- subset(source, yr == 2008)
#Order source table by year, route_num
source <- source[order(source$yr,source$route_num), ]
# # Route name
# #2002
# df <- merge(x=x08,y=x02,by="route_num",all.y=TRUE)
# df <- df[order(df[,1]), ]
# x02 <- x02[order(x02[,4]), ]
# source$service_code <- ifelse(source$yr == 2002, df$service_code.x, source$service_code)
# source$service_type <- ifelse(source$yr == 2002, df$service_type.x, source$service_type)
# source$service_mode <- ifelse(source$yr == 2002, df$service_mode.x, source$service_mode)
#
# #2003
# df <- merge(x=x08,y=x03,by="route_num",all.y=TRUE)
# df <- df[order(df[,1]), ]
# x03 <- x03[order(x03[,4]), ]
# source$service_code <- ifelse(source$yr == 2003, df$service_code.x, source$service_code)
# source$service_type <- ifelse(source$yr == 2003, df$service_type.x, source$service_type)
# source$service_mode <- ifelse(source$yr == 2003, df$service_mode.x, source$service_mode)
#
# #2004
# df <- merge(x=x08,y=x04,by="route_num",all.y=TRUE)
# df <- df[order(df[,1]), ]
# x04 <- x04[order(x04[,4]), ]
# source$service_code <- ifelse(source$yr == 2004, df$service_code.x, source$service_code)
# source$service_type <- ifelse(source$yr == 2004, df$service_type.x, source$service_type)
# source$service_mode <- ifelse(source$yr == 2004, df$service_mode.x, source$service_mode)
#
# #2005
# df <- merge(x=x08,y=x05,by="route_num",all.y=TRUE)
# df <- df[order(df[,1]), ]
# x05 <- x05[order(x05[,4]), ]
# source$service_code <- ifelse(source$yr == 2005, df$service_code.x, source$service_code)
# source$service_type <- ifelse(source$yr == 2005, df$service_type.x, source$service_type)
# source$service_mode <- ifelse(source$yr == 2005, df$service_mode.x, source$service_mode)
#
# #2006
# df <- merge(x=x08,y=x06,by="route_num",all.y=TRUE)
# df <- df[order(df[,1]), ]
# x06 <- x06[order(x06[,4]), ]
# source$service_code <- ifelse(source$yr == 2006, df$service_code.x, source$service_code)
# source$service_type <- ifelse(source$yr == 2006, df$service_type.x, source$service_type)
# source$service_mode <- ifelse(source$yr == 2006, df$service_mode.x, source$service_mode)
#
# #2007
# df <- merge(x=x08,y=x07,by="route_num",all.y=TRUE)
# df <- df[order(df[,1]), ]
# x07 <- x07[order(x07[,4]), ]
# source$service_code <- ifelse(source$yr == 2007, df$service_code.x, source$service_code)
# source$service_type <- ifelse(source$yr == 2007, df$service_type.x, source$service_type)
# source$service_mode <- ifelse(source$yr == 2007, df$service_mode.x, source$service_mode)
# rm(df,x02,x03,x04,x05,x06,x07,x08)
#Update route name column in source file to match fact table
source$route_name <- ifelse(source$yr <2008 & is.na(source$route_name) & !is.na(source$route_num),paste0("Route #",source$route_num),source$route_name)
source$route_name <- ifelse(source$route_name == "Route #398","Route #398 Coaster",source$route_name)
source$route_name <- ifelse(source$route_name == "Route #510","Route #510 Blue Line",source$route_name)
source$route_name <- ifelse(source$route_name == "Route #520","Route #520 Orange Line",source$route_name)
source$route_name <- ifelse(source$route_name == "Route #530","Route #530 Green Line",source$route_name)
#Other
source$route_num <- ifelse(source$route_name == "Encinitas Coaster Connection",374,source$route_num)
source$service_code <- ifelse(source$route_name == "Encinitas Coaster Connection","NCTD",source$service_code)
source$service_type <- ifelse(source$route_name == "Encinitas Coaster Connection","Fixed route",source$service_type)
source$service_mode <- ifelse(source$route_name == "Encinitas Coaster Connection","Bus",source$service_mode)
#Round digits to account for the impreciseness of the float data type in the SQL database
fact$avg_pass_per_mile <- round(fact$avg_pass_per_mile,10)
fact$avg_pass_per_hour <- round(fact$avg_pass_per_hour,10)
fact$avg_trip_length_miles <- round(fact$avg_trip_length_miles,9)
fact$vehicle_speed_mph <- round(fact$vehicle_speed_mph,10)
fact$passenger_hours <- round(fact$passenger_hours,8)
fact$avg_trip_length_minutes <- round(fact$avg_trip_length_minutes,10)
fact$passenger_miles_per_gallon_fuel <- round(fact$passenger_miles_per_gallon_fuel,10)
#Order fact file
fact <- fact[order(fact$yr,fact$route_num), ]
source <- source[order(source$yr,source$route_num), ]
#delete rownames for checking files match
rownames(source) <- NULL
rownames(fact) <- NULL
# compare source to fact files to ensure they match
all(source == fact)
all.equal(source,fact)
identical(source,fact)
which(source!=fact, arr.ind=TRUE)
#Order source table by year, route_num
source <- source[order(source$yr,source$route_num), ]
source$service_code <- ifelse(source$yr == 2002 & x08$route_num == x02$route_num & x08$route_name == x02$route_name, df$service_code.x, source$service_code)
